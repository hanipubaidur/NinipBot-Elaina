import { join } from 'path'
import { promises } from 'fs'

let handler = async (m, { args, usedPrefix, __dirname }) => {
let imgr = flaaa.getRandom()
    let _package = JSON.parse(await promises.readFile(join(__dirname, '../package.json')).catch(_ => ({}))) || {}
    let user = global.db.data.users[m.sender]
    if (user.health >= 100) return m.reply(`
Your ‚ù§Ô∏èhealth is full!
`.trim())
    const heal = 40 + (user.cat * 4)
    let count = Math.max(1, Math.min(Number.MAX_SAFE_INTEGER, (isNumber(args[0]) && parseInt(args[0]) || Math.round((100 - user.health) / heal)))) * 1
    if (user.potion < count) return conn.sendFile(m.chat, imgr + 'lowpotion', '', 
`*‚Äì„Äé INSUFFICIENT POTION „Äè‚Äì*\n è·¥è·¥ú …¥·¥á·¥á·¥Ö ·¥õ·¥è  ô·¥ú è ${count - user.potion} ·¥ç·¥è Ä·¥á ü•§·¥©·¥è·¥õ…™·¥è…¥ ·¥õ·¥è  ú·¥á·¥Ä ü.
 è·¥è·¥ú'·¥†·¥á ${user.potion} ü•§·¥©·¥è·¥õ…™·¥è…¥ …™…¥  ô·¥Ä…¢.
‚õä‚îÅ‚îÄ‚îà‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚îÄ‚îÅ‚õä
üíÅüèª‚Äç‚ôÇ ·¥õ…™·¥© :
' ô·¥ú èü•§·¥©·¥è·¥õ…™·¥è…¥' | '·¥Äs·¥ã ·¥õ·¥è ·¥Ä ü ü'
`.trim(), m)
    user.potion -= count * 1
    user.health += heal * count
    
conn.sendFile(m.chat, imgr + 'fullhealth', '', `*‚îÅ‚îà‚îÅ‚îà‚îÅ„Äé FULL HEALTH „Äè‚îÅ‚îà‚îÅ‚îà‚îÅ*\ns·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ${count} ü•§·¥©·¥è·¥õ…™·¥è…¥ ·¥ús·¥á ·¥õ·¥è  Ä·¥á·¥Ñ·¥è·¥†·¥á Ä  ú·¥á·¥Ä ü·¥õ ú.`, m)
}

handler.help = ['heal']
handler.tags = ['rpg']
handler.command = /^(heal)$/i

export default handler

function isNumber(number) {
    if (!number) return number
    number = parseInt(number)
    return typeof number == 'number' && !isNaN(number)
}